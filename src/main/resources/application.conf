include "postgres-application.conf"
akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    loglevel = INFO

    actor {
        extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
        kryo {
            implicit-registration-logging = true
            type = "nograph"
            kryo-reference-map = false
            kryo-trace = false
            resolve-subclasses = true
            //            buffer-size = 4096
            buffer-size = 32768
            classes = ["sample.blog.Post$Event",
                "sample.blog.Post$Command", "sample.blog.AuthorListing$Command",
                "sample.blog.AuthorListing$Posts", "akka.dispatch.sysmsg.Watch",
                "sample.blog.AuthorListing$GetPosts", "sample.blog.AuthorListing$PostSummary",
                "sample.blog.AuthorListing$RemoveFirstN",
                "sample.blog.Post$AddPost", "sample.blog.Post$PostAdded",
                "sample.blog.Post$BodyChanged", "sample.blog.Post$TitleUpdated",
                "sample.blog.Post$PostContent",
                "sample.blog.Post$AuthorUpdated",
                "sample.blog.Post$Removed",
                "sample.blog.Post$ChangeBody",
                "sample.blog.Post$UpdateTitle",
                "sample.blog.Post$Publish",
                "sample.blog.Post$PostPublished",
                "sample.blog.Post$Remove",
                "java.time.OffsetDateTime",
                "akka.remote.RemoteActorRef",
                "akka.actor.RepointableActorRef",
                "scala.collection.immutable.Nil$",
                "scala.collection.immutable.$colon$colon",
                "scala.collection.mutable.ListBuffer"]
        }

        serializers {
            java = "akka.serialization.JavaSerializer"
            kryo = "com.romix.akka.serialization.kryo.KryoSerializer"

        }
        serialization-bindings {
            "sample.blog.Post$Event" = kryo
            "sample.blog.Post$Command" = kryo
            "sample.blog.AuthorListing$Command" = kryo
            "sample.blog.AuthorListing$Posts" = kryo
            "akka.dispatch.sysmsg.Watch" = kryo
            "scala.collection.immutable.$colon$colon" = kryo
            "scala.collection.mutable.ListBuffer" = kryo
            "java.io.Serializable" = none
        }
        provider = "akka.cluster.ClusterActorRefProvider"
        #        warn-about-java-serializer-usage = false
    }

    remote {
        log-remote-lifecycle-events = off
        netty.tcp {
            hostname = "127.0.0.1"
            port = 0
        }
    }

    cluster {
        seed-nodes = [
            "akka.tcp://ClusterSystem@127.0.0.1:2551",
            "akka.tcp://ClusterSystem@127.0.0.1:2552"]

        auto-down-unreachable-after = 10s

        metrics.enabled = off
    }
}

slick.db.idleTimeout = 10000 // 10 seconds
slick.loglevel = DEBUG
replay-journal = false
